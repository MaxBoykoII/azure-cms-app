name: "Terraform"

on:
  push:
    branches:
      - main

jobs:
  build_and_push_image:
    name: "Build and Push Application Image"
    env:
      USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      PASSWORD: ${{ secrets.DOCKERHUB_TOKEN }}
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7.11
          architecture: x64

      - name: Install dev dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt

      - name: Lint Application code
        run: |
          flake8 FlaskWebProject
          black FlaskWebProject --check
          isort --verbose
          isort FlaskWebProject --profile black --check-only

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login into container registry
        uses: docker/login-action@v1
        with:
          username: ${{ env.USERNAME }}
          password: ${{ env.PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile.prod
          push: true
          tags: maxboyko/azure-cms-app:latest

  terraform:
    name: "Terraform"
    needs: build_and_push_image
    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      TF_ACTIONS_VERSION: 1.0.8
    runs-on: ubuntu-latest
    environment: production
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: "Terraform Format"
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: ${{ env.TF_ACTIONS_VERSION }}
          tf_actions_subcommand: "fmt"
          tf_actions_working_dir: "./resources"

      - name: "Terraform Init"
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: ${{ env.TF_ACTIONS_VERSION }}
          tf_actions_subcommand: "init"
          tf_actions_working_dir: "./resources"

      - name: "Terraform Validate"
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: ${{ env.TF_ACTIONS_VERSION }}
          tf_actions_subcommand: "validate"
          tf_actions_working_dir: "./resources"

        # - name: "Terraform Destroy"
        #   uses: hashicorp/terraform-github-actions@master
        #   with:
        #     tf_actions_version: ${{ env.TF_ACTIONS_VERSION }}
        #     tf_actions_subcommand: "destroy"
        #     tf_actions_working_dir: "./resources"

        env:
          TF_VAR_password: ${{ secrets.CMS_DB_PASSWORD }}
          TF_VAR_ip_address: ${{ secrets.CMS_DB_IP }}

      - name: "Terraform Plan"
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: ${{ env.TF_ACTIONS_VERSION }}
          tf_actions_subcommand: "plan"
          tf_actions_working_dir: "./resources"

        env:
          TF_VAR_password: ${{ secrets.CMS_DB_PASSWORD }}
          TF_VAR_ip_address: ${{ secrets.CMS_DB_IP }}

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: ${{ env.TF_ACTIONS_VERSION }}
          tf_actions_subcommand: "apply"
          tf_actions_working_dir: "./resources"
        env:
          TF_VAR_password: ${{ secrets.CMS_DB_PASSWORD }}
          TF_VAR_ip_address: ${{ secrets.CMS_DB_IP }}

  seed_db:
    name: "Seed Db"
    runs-on: windows-latest
    environment: production
    needs: terraform

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Init Users table
        uses: Azure/sql-action@v1
        with:
          server-name: azure-cms-db-server.database.windows.net
          connection-string: ${{ secrets.CONNECTION_STRING }}
          sql-file: "./sql_scripts/users-table-init.sql"

      - name: Init Posts table
        uses: Azure/sql-action@v1
        with:
          server-name: azure-cms-db-server.database.windows.net
          connection-string: ${{ secrets.CONNECTION_STRING }}
          sql-file: "./sql_scripts/posts-table-init.sql"
